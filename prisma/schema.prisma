datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId    
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  stripeCustomerId String?
  accreditationLevel Int    @default(0)
}


model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// concernant ma bdd de référencés :
model Type {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  categories  Category[]
}

model Category {
  id      String      @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  type    Type     @relation(fields: [typeId], references: [id])
  typeId  String @db.ObjectId
  cards   ServiceCard[]
}

model ServiceCard {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  adress            String
  zipcode           Int
  city              String
  description       String
  phone             Int
  email             String
  url               String
  photo             Json
  lat               Float
  long              Float
  openingDaysHours  Json
  category          Category  @relation(fields: [categoryId], references: [id])
  categoryId        String @db.ObjectId
  }
